services:
  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env-local
    depends_on:
      db:
        condition: service_healthy
    entrypoint: >
      sh -c "python manage.py migrate &&
             python manage.py createsuperuser --noinput || true &&
             gunicorn mysite.wsgi:application --reload --bind 0.0.0.0:8000"

  db:
    image: postgres:latest
    env_file:
      - .env-local
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    env_file:
      - .env-local
    depends_on:
      - prometheus

volumes:
  grafana-data:
  prometheus_data: {}

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   container_name: node-exporter
  #   restart: unless-stopped
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.rootfs=/rootfs'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #   expose:
  #     - 9100
  
  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - ./loki-config.yml:/etc/loki/local-config.yaml

  # promtail:
  #   image: grafana/promtail:latest
  #   volumes:
  #     - ./promtail-config.yml:/etc/promtail/config.yml
  #     - /var/log:/var/log
  #   command: -config.file=/etc/promtail/config.yml -config.expand-env=true

  